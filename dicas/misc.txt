//Esta eh uma miscelanea de funcoes uteis para competicoes


atoi(#nome do vetor) -> converte vetor de char para inteiro
atoll(#nome do vetor) -> converte vetor de char para long long
stoi(#nome da string) -> converte string para inteiro [C++11] (atencao: nao colocar uma string com valor maior q INT_MAX)
stoll(#nome da string) -> converte string para long long [C++11] (atencao: nao colocar uma string com valor maior q LLONG_MAX)
to_string(x) -> converte um valor numerico x (int, long long, double, float, etc.) para string [C++11]


(#nome da string).find_first_of("213") -> retorna primeiro indice da string referente a um char q se encontra no parametro (no caso, o primeiro indice da string cujo char eh '2', ou '1', ou '3')
(#nome da string).find_first_not_of("213") -> retorna primeiro indice da string referente a um char q nao se encontra no parametro (no caso, o primeiro indice da string cujo char nao eh '2', nem '1', nem '3')


reverse(v.begin(), v.end()) -> Inverte a ordem dos elementos do range especificado em tempo linear na metade da distancia entre comeco e fim


next_permutation(v.begin(), v.end()) -> gera proxima permutacao lexicografica de um vetor (de char, de inteiros, etc.)
prev_permutation(v.begin(), v.end()) -> gera permutacao lexicografica anterior de um vetor (de char, de inteiros, etc.)


__builtin_popcount(x) -> retorna a quantidade de bits '1' do binario do numero inteiro x
__builtin_popcountll(x) -> retorna a quantidade de bits '1' do binario do numero long long x
__builtin_ctz(x) -> retorna a quantidade de trailing zeros do binario do numero inteiro x
__builtin_ctzll(x) -> retorna a quantidade de trailing zeros do binario do numero long long x
